name: RUST_CI

# Trigger CI once for each PR update (on merge diff) and again when PR is merged to main (in push)
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read # allows reading repo contents (needed for basic CI)
  issues: read # allows reading action metadata (e.g., cache)

env:
  CARGO_TERM_COLOR: always # force colored output in logs
  CARGO_INCREMENTAL: 0 # disable incremental compilation for faster from-scratch builds

# Ensure only one CI run per branch/PR; cancel redundant ones
concurrency:
  group: ci-${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

defaults:
  run:
    working-directory: backend

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: Check format
        run: cargo fmt --check

  unused-dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-machete
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-machete

      - name: Check for unused dependencies
        run: cargo machete

  audit-dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-audit
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-audit

      - name: Audit dependencies
        run: cargo audit --color always

  lint-clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Check for clippy warnings
        run: cargo clippy --all-targets --all-features --color always -- -D warnings

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: Run unit tests
        run: cargo test --lib --color always -- --nocapture

  integration-tests:
    runs-on: ubuntu-latest
    env:
      MONGO_URI: "mongodb://root:example@localhost:27017/"
      MONGO_DB_NAME: "codewhisperer"

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: example

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: Wait for MongoDB to be ready
        run: |
          # Simple check using netcat instead of mongosh
          until nc -z localhost 27017; do
            echo "Waiting for MongoDB..."
            sleep 2
          done
          echo "MongoDB is ready!"

      - name: Integration tests
        run: cargo test --test integration_tests --color always -- --nocapture
